<capitulo>Postfix: introdução</capitulo>

	A criação de todo software depende de uma motivação especial ou deficiência de alguma ferramenta. Ao analisar o software livre, o mesmo foi criado por aqueles que não concordavam em um modelo de licenciamento totalmente fechado e que só beneficiavam as grandes companhias. Você era obrigado a pagar uma quantia significativa para ter o direito de usar um determinado software.

	Aos poucos os projetos chamados de alternativos começavam a surgir. Nasceu o movimento do software livre assim os programadores ganharam mais liberdades para criar e melhorar aquilo que já existia. O modelo de negócio proprietário começou a perder força e nos dias atuais, o software livre está presente cada vez mais nos computadores de todo o mundo. 

	Já que o Postfix é um software livre e foi criado a partir de deficiência dos softwares existentes naquela época, é mais que justo incluir esse grandioso MTA no grupo de softwares livres de sucesso.

<subsecao>História</subsecao>

	Na década de 70, as primeiras mensagens eram enviadas pela Arpanet, antecessora da atual Internet. A troca de mensagens era feita em sua maioria por estudantes, pesquisadores e profissionais dos grandes centros de pesquisa, restrita a poucos usuários que tinham acesso a essa rede. As mensagens eram enviadas através de um protocolo semelhante ao atual SMTP, que foi definido apenas em 1982.

	O Sendmail era o servidor de correios mais utilizado na decada de 90, causando amor e ódio aos administradores de sistema. Causava amor àqueles que tinham tempo de ler, estudar e compreender o seu funcionamento complexo e cheio de macros. Ódio para aqueles que precisavam apenas rotear suas mensagens e não havia necessidade de perder horas e mais horas tentando compreender seu funcionamento. A sua forma monolítica também era um grande ponto negativo. Sendo apenas um único processo controlando todas as etapas de transmissão de email, o Sendmail apresentava inúmeras falhas de segurança, de maior risco quando executado em modo root. Muitos servidores eram invadidos por crackers e naturalmente os administradores de sistema procuravam alternativas. Na época não existia muitas alternativas, os administradores continuavam a utilizar o Sendmail.

	Em 1998 as primeiras versões do Postfix começaram a surgir. Wietse Venema é seu criador e possui inúmeros trabalhos relacionados à segurança da informação. Wietse é pesquisador da IBM até hoje. A primeira versão oficial do Postfix, em software livre foi lançada em Dezembro de 1998.

<subsecao>Características</subsecao>

	As principais características em seu desenvolvimento:

<lista>
	<item/><b>Sistema multitarefa</b> – O Postfix possui um conjunto completo de módulos que desempenham um papel específico para cada etapa do tráfego de e-mails; este comportamento permite melhor desempenho em equipamentos multiprocessados.
	<item/><b>Separação de privilégios</b> – O Postfix é executado em chroot que restringe o acesso a arquivos internos a jaula, separando assim muito de seus módulos. Um possível invasor que explore uma vulnerabilidade do Postfix será restrito a um pequeno espaço do sistema, normalmente /var/spool/postfix, assim, não comprometendo a base de usuários, base de mensagens, ou a obtenção de informações do sistema.
	<item/><b>Modular</b> – É possível criar módulos para trabalhar em conjunto com o Postfix, tornando-o facilmente extendível.
	<item/><b>Compatibilidade</b> – O Postfix foi desenvolvido para suportar os formatos de armazenamentos de mensagens existentes.
</lista>

	É possível perceber que o Postfix é um software criado para ter uma arquitetura rica, diversificada e modular, permitindo assim seu uso em ambientes diferentes.

<subsecao>Avanços</subsecao>

<tabela>{|c|c|}
	<lh><th>Versão</th> <col/> <th>Descrição</th></lh>
	<tr> Postfix 1.0 <col/> ETRN em Relay. </tr>
	<tr> Postfix 1.0 <col/> Suporte a LMTP. </tr>
	<tr> Postfix 1.0 <col/> Pipelining (SMTP client and server). </tr>
	<tr> Postfix 1.0 <col/> Suporte a autenticação SASL. </tr>
	<tr> Postfix 1.1 <col/> QMQP server. </tr>
	<tr> Postfix 2.0 <col/> MIME (including 8BITMIME to 7BIT conversion). </tr>
	<tr> Postfix 2.2 <col/> Cache de conexão SMTP. </tr>
	<tr> Postfix 2.2 <col/> Suporte a IPV6. </tr>
	<tr> Postfix 2.2 <col/> Criptografia via TLS e autenticação. </tr>
	<tr> Postfix 2.3 <col/> DSN. </tr>
	<tr> Postfix 2.3 <col/> Melhorias nos códigos de status. </tr>
	<tr> Postfix 2.3 <col/> Suporte a múltiplos formatos da biblioteca SASL. </tr>
	<legenda>Avanços no suporte de protocolos.</legenda>
	<nome>tab:postfix-intro-1</nome>
</tabela>

<tabela>{|c|c|}
	<lh><th>Versão</th> <col/> <th>Descrição</th></lh>
	<tr> Postfix 1.1 <col/> Content filter. </tr>
	<tr> Postfix 2.1 <col/> Controle de acesso por cliente, remetente, destinatário, etc. </tr>
	<tr> Postfix 2.1 <col/> Testes com endereços. </tr>
	<tr> Postfix 2.1 <col/> Plugin Greylist. </tr>
	<tr> Postfix 2.1 <col/> Plugin SPF. </tr>
	<tr> Postfix 2.2 <col/> Limite de conexões. </tr>
	<legenda>Avanços no controle de lixo eletrônico.</legenda>
	<nome>tab:postfix-intro-2</nome>
</tabela>

<tabela>{|c|c|}
	<lh><th>Versão</th> <col/> <th>Descrição</th></lh>
	<tr> Postfix 1.0 <col/> Berkeley DB. </tr>
	<tr> Postfix 1.0 <col/> DBM Database. </tr>
	<tr> Postfix 1.0 <col/> Suporte LDAP. </tr>
	<tr> Postfix 1.0 <col/> Suporte MySQL. </tr>
	<tr> Postfix 2.0 <col/> Suporte PostgreSQL. </tr>
	<tr> Postfix 2.2 <col/> CDB Database. </tr>
	<legenda>Avanços no suporte a banco de dados.</legenda>
	<nome>tab:postfix-intro-3</nome>
</tabela>

<subsecao>Componentes</subsecao>

	As configurações feitas de maneira simples fazem o seu uso bastante eficiente e simplificado. É importante compreender em detalhes cada etapa de seu funcionamento, desta forma será possível agir de forma rápida e eficiente em caso de problemas ou eventualidades em sua estrutura de correio.

	A sua arquitetura é diferente de outros sistemas monolíticos, como o Sendmail. O Postfix separa em módulos cada etapa da entrega da mensagens, desta forma, diferentes aplicativos trabalham individualmente em uma ordem pré-definida para que a entrega das mensagens seja feita com sucesso. Isso garante uma estabilidade no sistema e naturalmente um ganho de performance.

	A outra grande vantagem da utilização de separação privilégios é poder controlar melhor o objetivo de seu sistema de e-mail. Caso seu servidor só receba mensagens da internet (MX), você pode priorizar o processo responsável por essa tarefa, deixando as outras atividades com um peso menor. Isso agilizará o trabalho de seu servidor e o ganho de performance será visível.

	É possível também fazer o Postfix trabalhar de forma individual. Em uma situação que o servidor recebeu uma grande quantidadede mensagens e não está conseguindo realizar a entrega destas mensagens. É possível interromper o processo de recepção de novas mensagens (smtpd) fazendo com que as mensagens enfileiradas sejam entregues. No momento que a fila diminuir, pode-se reativaro processo smtpd, voltando a permitir recepção de novas mensagens. Esta lógica também é utilizada nas demais etapas de entrega de mensagens.

<subsecao>Filas de mensagens</subsecao>

	O Postfix possui uma fila para cada etapa da entrega de mensagens. Vamos agora explorar cada uma dessas filas na tabela abaixo:

<figura>
    <tamanho>0.7</tamanho>
    <arquivo>imgs/postfix-intro-1</arquivo>
    <legenda>Descrição das filas de mensagens</legenda>
    <nome>fig:postfix-intro-1</nome>
</figura>

<subsecao>Diagrama de interação dos módulos</subsecao>

<figura>
    <tamanho>1.0</tamanho>
    <arquivo>imgs/postfix-intro-2</arquivo>
    <legenda>Interação entre os módulos do Postfix</legenda>
    <nome>fig:postfix-intro-2</nome>
</figura>

<subsecao>Recepção de mensagens</subsecao>

<subsubsecao>Recepção de mensagens locais</subsubsecao>

	As mensagens locais são inseridas na fila maildrop pelo comando "sendmail", sendo uma interface para o utilitário postdrop. Estas mensagens podem ser provenientes do próprio sistema, como mensagems do Cron ou outro aplicativo. O módulo pickup monitora a fila maildrop, e ao ser detectada uma nova mensagem, esta é entregue ao módulo cleanup. Caso a mensagem não possua todos os itens necessários em seu cabeçalho, o módulo cleanup realizará a inserção dos mesmos. Antes do e-mail prosseguir, o módulo trivial-rewrite é acionada para verificar se o destinatário deve ser alterado. Veja os detalhes no gráfico a seguir.

<subsubsecao>Recepção de mensagens via rede</subsubsecao>

	O uso mais comum do Postfix é via rede, onde um servidor de correio (que não precisa ser necessariamente outro Postfix) realiza a entrega do email, muitas vezes passando por vários cantos do planeta até chegar à caixa do usuário. Tendo como base o gráfico 2, percebemos que as mensagens chegam pelo daemon smtpd, que faz várias checagens de segurança (verifica se as mensagens atende os padrões mínimos, se o cliente tem o direito de fazer relay por esse servidor ou não e se o destinatário existe no servidor). O smtpd repassa a mensagem para o cleanup, que como já vimos acima, faz suas checagens e entrega a mensagem para a fila de incoming. A partir daí, a mensagem segue seu ciclo até chegar à caixa postal do usuário. 

<subsecao>Entrega local de mensagens</subsecao>

	Após a recepção da mensagem, esta é enfileirada sendo necessário a realização da sua entrega a caixa de mensagens. Este procedimento é chamado de "Mail Delivery Agent - MDA", sendo possível a utilização de um software externo ao Postfix para a realização deste procedimento como o procmail ou o maildrop, ou a utilização do próprio Postfix, como documentado a seguir.

	A mensagem pode ser entregue em um diretório no sistema de arquivos, sendo armazenada no formato mbox ou Maildir, assim como, pode ser entregue através do protocolo LMTP.

<subsubsecao>Formato mbox</subsubsecao>

	O formato de armazenamento mbox utiliza um único arquivo para armazenar a caixa postal de cada usuário, sendo que as mensagens ficam concatenadas e separadas por um linha indicativa de início de mensagem. As mensagens do usuário "rei", ficam localizadas no arquivo /var/spool/mail/rei, sendo que este arquivo pode ser grande, dificultando a leitura de seu conteúdo pelo servidor de POP/IMAP.

	O comportamento padrão do Postfix é realizar a entrega da mensagem no formato mbox, em /var/spool/mail/usuario, e é determinada pelo valor do parâmetro especificado a seguir:

<comando>
mail_spool_directory = /var/spool/mail
</comando>

<subsubsecao>Formato Maildir</subsubsecao>

	O formato de armazenamento Maildir cria um novo arquivo para cada mensagem recebida. Criado para resolver deficiências do formato mbox, como a lentidão para acesso as mensagens em grandes caixas postais.

	Para o Postfix realizar a entrega da mensagem no formado Maildir deve utilizar a configuração a seguir:

<comando>	
mail_spool_directory = /var/spool/mail/
</comando>

	A escolha do formato de armazenamento depende diretamente do software de POP3/IMAP que é utilizado, pois sua configuração precisa acessar exatamente o mesmo diretório e as mensagens devem estar no formato esperado por este software.

<subsubsecao>LMTP - Local Mail Transport Protocol</subsubsecao>

	O LMTP criado para a transferência de mensagens em redes internas, é semelhante ao protocolo SMTP, entretando seu objetivo é transferir as mensagens entre servidores com endereços determinados.

	Este meio de entrega é utilizado pelo Cyrus, software utilizado durante este treinamento. Assim, o Postfix recebe a mensagem, verifica a existência do usuário, entre outros validações, encaminhando a mensagem para o Cyrus.

	O LMTP permite a utilização de um conjunto de servidores para o armazenamento de e-mails, caso inúmeros domínios precisem ser armazenados em diferentes servidores. O Cyrus fornece recebe as mensagens através da porta TCP/24.

	O LMTP não deve ser acessível através da internet, visto que somente o MTA necessita realizar conexões a este protocolo. O parâmetro de configuração a seguir tem prioridade em relação a entrega nos formatos mbox e Maildir.

<comando>
mailbox_transport = lmtp:unix:/var/run/cyrus/socket/lmtp
</comando>
